# Docker Container Workflow Template
# Copy this template to .github/workflows/ in your project
# Customize the sections marked with # TODO comments

name: Docker Build and Deploy

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  # TODO: Update image name to match your project
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # TODO: Add your specific test steps
      - name: Run tests
        run: |
          # Example test commands:
          # docker compose -f compose.test.yml up --abort-on-container-exit
          # npm test
          # python -m pytest
          echo "Add your test commands here"

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebad0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Log in to Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix=sha-

      - name: Build and push Docker image
        uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25 # v5.3.0
        with:
          context: .
          # TODO: Update dockerfile path if needed
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    # TODO: Add environment protection for production deployments
    # environment: production

    steps:
      - name: Deploy to environment
        run: |
          # TODO: Add your deployment steps
          # Examples:
          # - SSH to server and pull new image
          # - Update Kubernetes deployment
          # - Trigger external deployment webhook
          echo "Add your deployment commands here"
          echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:sha-${{ github.sha }}"

      # TODO: Add health checks after deployment
      - name: Health check
        run: |
          # TODO: Add health check for your deployed service
          # curl -f https://your-app.example.com/health
          echo "Add health check commands here"