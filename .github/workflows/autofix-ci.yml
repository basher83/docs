name: autofix.ci

on:
  # Manual runs still possible
  workflow_dispatch:
  # Auto-run on pushes to any non-protected branch so fixes land before PRs
  push:
    branches-ignore: [ main ]
    paths:
      - '**/*.md'
      - '**/*.mdx'
      - '**/*.py'
      - '**/*.yml'
      - '**/*.yaml'
      - '**/*.json'
      - '**/*.toml'
      - 'pyproject.toml'
      - 'ruff.toml'
      - '.markdownlint.json'
      - '.prettierrc.json'
      - '.prettierignore'
      - '.mise.toml'
      - '.github/workflows/autofix-ci.yml'
  # Run on PRs targeting main for final polish
  pull_request:
    paths:
      - '**/*.md'
      - '**/*.mdx'
      - '**/*.py'
      - '**/*.yml'
      - '**/*.yaml'
      - '**/*.json'
      - '**/*.toml'
      - 'pyproject.toml'
      - 'ruff.toml'
      - '.markdownlint.json'
      - '.prettierrc.json'
      - '.prettierignore'
      - '.mise.toml'
      - '.github/workflows/autofix-ci.yml'
  workflow_call:

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: autofix-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: false

jobs:
  autofix:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Skip if bot re-run
        if: ${{ github.actor == 'autofix-ci[bot]' || github.actor == 'dependabot[bot]' || github.actor == 'renovate[bot]' || (github.actor == 'github-actions[bot]' && github.event_name == 'push' && contains(github.event.head_commit.message, 'autofix')) }}
        run: echo "Detected automation bot (${GITHUB_ACTOR}) loop scenario; exiting early." && exit 0

      - name: Set mise environment variables
        run: |
          echo "MISE_DATA_DIR=${{ github.workspace }}/.mise-data" >> $GITHUB_ENV
          echo "MISE_CACHE_DIR=${{ github.workspace }}/.mise-cache" >> $GITHUB_ENV
          # Create directories to avoid "No such file or directory" errors
          mkdir -p ${{ github.workspace }}/.mise-data/installs/{node,python}
          mkdir -p ${{ github.workspace }}/.mise-cache

      - name: Setup mise
        uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.8.10
          install: true
          cache: true

      - name: Setup uv (Python tools)
        uses: astral-sh/setup-uv@b75a909f75acd358c2196fb9a5f1299a9a8868a4
        with:
          version: "0.8.17"

      - name: Ruff fix-only
        run: |
          if [ -f pyproject.toml ] || [ -f ruff.toml ]; then
            # Use project-managed ruff if config exists (dependency expected in pyproject)
            if uv run ruff --version >/dev/null 2>&1; then
              uv run ruff check --fix-only . || true
            else
              # Fallback: ephemeral tool install without persisting to project
              uvx ruff check --fix-only . || true
            fi
          else
            echo "No Python lint config detected; skipping Ruff"
          fi

      - name: Ruff format
        run: |
          if [ -f pyproject.toml ] || [ -f ruff.toml ]; then
            if uv run ruff --version >/dev/null 2>&1; then
              uv run ruff format . || true
            else
              uvx ruff format . || true
            fi
          else
            echo "No Python lint config detected; skipping Ruff format"
          fi

      - name: Prettier write
        run: mise run fmt || true

      - name: markdownlint fix
        run: mise x -- markdownlint-cli2 "**/*.md" "!node_modules" "!.mise-data" "!.mise-cache" --config .markdownlint.json --fix || true

      - name: autofix commit
        uses: autofix-ci/action@635ffb0c9798bd160680f18fd73371e355b85f27
